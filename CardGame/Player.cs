// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

namespace AssemblyCSharp
{
	public class Player
	{
		private int 	currIndex;
		private int 	prize;
		private string 	name;
		private bool 	isFull;
		private Card 	activeCard;
		private int 	activeCardIndex;
		private Card[] 	cards;

		public Player(string n)
		{
			name = n;
			isFull = false;
			cards = new Card[4];
			prize = 0;
			currIndex = 0;
		}

		public void DrawCard(Card c)
		{
			if (isFull == false) 
			{
				if(currIndex < 4)
				{
					cards[currIndex] = c;
					currIndex++;
					if(currIndex == 4)
						isFull = true;
				}

				if(activeCard == null)
				{
					activeCard = cards[0];
					activeCardIndex = 0;
				}
			}
		}

		public string GetName()
		{
			return name;
		}

		public void Discard()
		{
			cards[0] = null;
			for(int i = 0; i < cards.Length; i++)
			{
				if(i + 1 != cards.Length)
					cards[i] = cards[i + 1];
				else
					cards[i] = null;
			}

			activeCard = cards [0];
		}

		public void ClaimPrize()
		{
			prize++;
		}

		public void PrintStats()
		{
			Debug.Log (GetName ());
			for(int i = 0; i < cards.Length; i++)
			{
				if(cards[i] != null)
				{
					Debug.Log(cards[i].GetName() + " : " + cards[i].GetHitPoints());
				}
			}
		}

		public void SetActiveCard()
		{
			activeCard = cards [activeCardIndex];
		}

		public Card GetActiveCard()
		{
			return activeCard;
		}

		public int ActiveCardIndex
		{
			get
			{
				return activeCardIndex;
			}
			set
			{
				activeCardIndex = value;
			}
		}

		public bool HandIsFull()
		{
			return isFull;
		}

		public int GetPrizeCount()
		{
			return prize;
		}
	}

}

